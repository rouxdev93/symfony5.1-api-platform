version: '3.5'
services:
  api-mysql:
    container_name: api-mysql-db
    env_file: .env_docker
    image: mysql:5.7
    ports:
      - ${MYSQL_HOST_PORT}:${MYSQL_PORT}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ${MYSQL_HOST_VOLUME_PATH}:/var/lib/mysql
    networks:
      - api-network

  api-phpmyadmin:
    container_name: api-phpmyadmin-db
    image: phpmyadmin/phpmyadmin
    links:
      - api-mysql:db
    ports:
      - ${PHP_MY_ADMIN_PORT}:80
    environment:
      MYSQL_USERNAME: ${MYSQL_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - api-network

  api-php:
    container_name: api-php-fpm-74
    env_file: .env_docker
    build:
      context: docker/images/php-fpm7.4
      args:
        UID: ${HOST_UID}
        TIMEZONE: ${TIMEZONE}
    volumes:
      - ${RELATIVE_APP_PATH}:/var/www/html
    links:
      - api-mysql
    networks:
      - api-network

  api-apache:
    container_name: api-apache-24
    env_file: .env_docker
    build:
      context: docker/images/apache2.4
      args:
        UID: ${HOST_UID}
    ports:
      - ${APPLICATION_WEB_PORT}:80
    environment:
      FPM_HOST: api-php:9000
#      XDEBUG_CONFIG: remote_host=172.22.0.1
    volumes:
      - ${LOGS_DIR}/apache/:/var/log/apache2/
      - ${RELATIVE_APP_PATH}:/var/www/html
    links:
      - api-mysql
      - api-php
    networks:
      - api-network

  #api-mailhog:
  #  container_name: api-mailhog
  #  image: mailhog/mailhog
  #  logging:
  #    driver: 'none'  # disable saving logs
  #  ports:
  #    - 1025:1025 # smtp server
  #    - 8025:8025 # web ui
  #  networks:
  #    - api-network

networks:
  api-network:
    external: true
